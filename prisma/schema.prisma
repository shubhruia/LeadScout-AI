// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  fullName      String
  vapiKey       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  csvUploads    CsvUpload[]
  callLogs      CallLog[]
}

model CsvUpload {
  id            String    @id @default(cuid())
  userId        String
  fileName      String
  columnMapping Json
  status        String    @default("pending")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  callLogs      CallLog[]
}

model CallLog {
  id            String    @id @default(cuid())
  userId        String
  csvUploadId   String
  phoneNumber   String
  callStatus    String
  duration      Int?
  cost          Float?
  transcript    String?
  recordingUrl  String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  csvUpload     CsvUpload @relation(fields: [csvUploadId], references: [id], onDelete: Cascade)
}